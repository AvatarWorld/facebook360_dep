var searchData=
[
  ['declare_5fbool',['DECLARE_bool',['../_calibration_8h.html#ace9ab87ff8c8f08114643ad75b78c06e',1,'DECLARE_bool(enable_timing):&#160;Calibration.h'],['../_calibration_8h.html#addfb117b2610cfb3dcbdb7e0cd366abc',1,'DECLARE_bool(log_verbose):&#160;Calibration.h'],['../_feature_detector_8h.html#ace9ab87ff8c8f08114643ad75b78c06e',1,'DECLARE_bool(enable_timing):&#160;FeatureDetector.h'],['../_feature_detector_8h.html#addfb117b2610cfb3dcbdb7e0cd366abc',1,'DECLARE_bool(log_verbose):&#160;FeatureDetector.h'],['../_feature_detector_8h.html#a5a3b499e95094a1bc78c89f86924e525',1,'DECLARE_bool(same_scale):&#160;FeatureDetector.h'],['../_feature_matcher_8h.html#ace9ab87ff8c8f08114643ad75b78c06e',1,'DECLARE_bool(enable_timing):&#160;FeatureMatcher.h'],['../_feature_matcher_8h.html#a72795ff6e88f75220c97f1cfb878e969',1,'DECLARE_bool(use_nearest):&#160;FeatureMatcher.h'],['../_system_util_8cpp.html#a410e6e586330edde473ecfbbf16370d5',1,'DECLARE_bool(help):&#160;SystemUtil.cpp'],['../_system_util_8cpp.html#afb51ff7d77f6c05aa011ad6a0d329ef7',1,'DECLARE_bool(helpshort):&#160;SystemUtil.cpp']]],
  ['declare_5fdouble',['DECLARE_double',['../_calibration_8h.html#a4fba82620b3e8f03cb6c563b3e56572e',1,'DECLARE_double(match_score_threshold):&#160;Calibration.h'],['../_feature_matcher_8h.html#a4fba82620b3e8f03cb6c563b3e56572e',1,'DECLARE_double(match_score_threshold):&#160;FeatureMatcher.h']]],
  ['declare_5fint32',['DECLARE_int32',['../_calibration_8h.html#a7e91b4b94b153c432d31bc9ee6ec88a3',1,'DECLARE_int32(threads):&#160;Calibration.h'],['../_feature_detector_8h.html#ac699424b346e8e0a87330e26e569c8e3',1,'DECLARE_int32(octave_count):&#160;FeatureDetector.h'],['../_feature_detector_8h.html#a7e91b4b94b153c432d31bc9ee6ec88a3',1,'DECLARE_int32(threads):&#160;FeatureDetector.h'],['../_feature_matcher_8h.html#a7e91b4b94b153c432d31bc9ee6ec88a3',1,'DECLARE_int32(threads):&#160;FeatureMatcher.h'],['../_generate_keypoint_projections_8cpp.html#a87aceb6d8ffeb328833fab6c5cb75f8b',1,'DECLARE_int32(search_radius):&#160;GenerateKeypointProjections.cpp'],['../_match_corners_test_8cpp.html#a8abcffa3b882b111b86473dc91dccd42',1,'DECLARE_int32(min_features):&#160;MatchCornersTest.cpp']]],
  ['declare_5fstring',['DECLARE_string',['../_calibration_8h.html#af8583c1d7499d998f2dfb6c5f0631762',1,'DECLARE_string(rig_in):&#160;Calibration.h'],['../_calibration_8h.html#a725dcb236e436f3bb40abbfd9225674e',1,'DECLARE_string(matches):&#160;Calibration.h'],['../_calibration_8h.html#a3f1ecbb8f81e72b63b44321545d4a7f1',1,'DECLARE_string(rig_out):&#160;Calibration.h'],['../_calibration_8h.html#ad2640411aac1faf2bfa2b985bab08937',1,'DECLARE_string(color):&#160;Calibration.h'],['../_calibration_8h.html#a89e9322caad53904cb1f5d3c79f6e71e',1,'DECLARE_string(frame):&#160;Calibration.h']]],
  ['define_5fbool',['DEFINE_bool',['../_calibration_8cpp.html#a4e7dcc84fd367efbaaae04c966b0bec8',1,'DEFINE_bool(enable_timing, false, &quot;print timing results&quot;):&#160;Calibration.cpp'],['../_calibration_8cpp.html#a617ace7a7450102d1f9727e41ed8dde5',1,'DEFINE_bool(log_verbose, false, &quot;enable verbose log output from ceres during refine&quot;):&#160;Calibration.cpp'],['../_feature_matcher_8cpp.html#ab3022114d63f9cb98b3504409d23efef',1,'DEFINE_bool(custom_zncc, false, &quot;uses custom ZNCC formula for patch matching&quot;):&#160;FeatureMatcher.cpp'],['../_geometric_calibration_8cpp.html#ac503e33337388f650fa826ed177f27f5',1,'DEFINE_bool(dir_per_frame, false, &quot;is there a directory per frame?\n&quot; &quot;i.e. is an image path of the form: \n&quot; &quot;    &lt;frame index&gt;/ ... /&lt;camera id&gt;.&lt;extension&gt;\n&quot; &quot;    e.g. 1/cam2.bmp or 000001/isp_out/cam14.png\n&quot; &quot;the default is a directory per camera. i.e. an image is of the form:\n&quot; &quot;    .../&lt;camera id&gt;/&lt;frame index&gt;.&lt;extension&gt;\n&quot; &quot;    e.g. cam2/123.bmp or rgb/cam14/000123.png&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a99f7c845fb431dc1e30ce3bf25695540',1,'DEFINE_bool(discard_outside_fov, true, &quot;discard matches outside fov&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#ae5df2644a15e6f824670844fa740d4ed',1,'DEFINE_bool(force_in_front, true, &quot;no intersections behind camera&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a75467ffd2652a65b8511974754375463',1,'DEFINE_bool(keep_invalid_traces, false, &quot;keep traces with multiple points from the same camera&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a48d00c16d8cd65b8bac7d375ee820095',1,'DEFINE_bool(lock_distortion, true, &quot;lock the distorion&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#aa465f96ebe0b3fdeac2ba99e32be6d09',1,'DEFINE_bool(lock_focal, false, &quot;lock the focal&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a62279c9857e9bc4cb12fed026559ab95',1,'DEFINE_bool(lock_positions, true, &quot;don&apos;t calibrate position&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a6ec341233f8e58949e19030f03ed0d76',1,'DEFINE_bool(lock_principals, false, &quot;don&apos;t calibrate principals&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#ace0acf5e60ed8860ff7c1fc8af4d49a8',1,'DEFINE_bool(lock_rotations, false, &quot;don&apos;t calibrate rotation&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a0c365e214dda359d3c55d05c900d76ac',1,'DEFINE_bool(report_per_camera_errors, false, &quot;per camera reprojection error statistics&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a7713c4932d8aae3c4c825cc637f7046d',1,'DEFINE_bool(robust, true, &quot;use Huber loss function&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a804d583d749ffede4fae67b5255134a8',1,'DEFINE_bool(shared_distortion, true, &quot;all cameras in a group share the same distortion&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a43bbd4d095706ea9c33b73c498dcd0df',1,'DEFINE_bool(shared_principal_and_focal, false, &quot;all cameras in a group share the same focal, principal&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#ab76762f0d260c3423ad302e5f2b0748f',1,'DEFINE_bool(weight_by_trace_count, false, &quot;weight the residual error by the number of traces per camera&quot;):&#160;GeometricCalibration.cpp'],['../_match_corners_8cpp.html#a2718e032e5692bee464e7c9bc7065b0f',1,'DEFINE_bool(same_scale, false, &quot;match at same scale where feature was found&quot;):&#160;MatchCorners.cpp'],['../_match_corners_8cpp.html#a3487120ebe93efb9c2dcb5b8131f77c1',1,'DEFINE_bool(use_nearest, false, &quot;use nearest neighbor during corner matching, default is bilinear&quot;):&#160;MatchCorners.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#a5bf2393d706072a50a9746018f71d616',1,'DEFINE_bool(create_mtl, false, &quot;cerate MTL file and attach to OBJ&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_export_point_cloud_8cpp.html#a5d0ed4c463116cd9d74cfd53510e644d',1,'DEFINE_bool(clip, false, &quot;points beyond max_depth are clipped, not clamped&quot;):&#160;ExportPointCloud.cpp'],['../_export_point_cloud_8cpp.html#a1d3cfe2a3637c2e8693f1475bb585e9e',1,'DEFINE_bool(header_count, true, &quot;add point count to the start of the file&quot;):&#160;ExportPointCloud.cpp'],['../_derp_c_l_i_8cpp.html#a014627a165f8b4be65a833696ad3eb47',1,'DEFINE_bool(do_bilateral_filter, true, &quot;apply bilateral filter at each level&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a8da9db3bc75f672aa4532bda01240b91',1,'DEFINE_bool(do_median_filter, true, &quot;apply median filter to disparity at each level&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a64aeb6ff854425c23c9c1ec8e5d3276b',1,'DEFINE_bool(partial_coverage, false, &quot;set to true if no 360 coverage&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#aa5ba917a3f977191ffaecc35b5113639',1,'DEFINE_bool(save_debug_images, false, &quot;if true, save debugging output images&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a17f107e1de6786761b6564ff344145ec',1,'DEFINE_bool(use_foreground_masks, false, &quot;use pre-computed foreground masks&quot;):&#160;DerpCLI.cpp'],['../_temporal_bilateral_filter_8cpp.html#a17f107e1de6786761b6564ff344145ec',1,'DEFINE_bool(use_foreground_masks, false, &quot;use pre-computed foreground masks&quot;):&#160;TemporalBilateralFilter.cpp'],['../_raw_to_rgb_8cpp.html#ad2321f5cf161aeb98891570225e21702',1,'DEFINE_bool(apply_tone_curve, true, &quot;Apply tone curve to image&quot;):&#160;RawToRgb.cpp'],['../_convert_to_binary_8cpp.html#a4efbb4570bf640c37ab81984f2f8c72a',1,'DEFINE_bool(run_conversion, true, &quot;whether or not to run binary conversion&quot;):&#160;ConvertToBinary.cpp'],['../_generate_equirect_8cpp.html#a4c5f754acd6fb67037e8601cf88c86a1',1,'DEFINE_bool(black_bg, false, &quot;set the background to be optionally black (red by default)&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#a4589cee273055b036bec6777b096f58d',1,'DEFINE_bool(crop_equirect, false, &quot;crop the equirect to only include visible images&quot;):&#160;GenerateEquirect.cpp'],['../_geometric_consistency_8cpp.html#af70e4e036c2f241505a1d87bf940bc0e',1,'DEFINE_bool(keep_clean, false, &quot;only recompute implausible depths&quot;):&#160;GeometricConsistency.cpp'],['../_simple_mesh_renderer_8cpp.html#a33b4f05d8f174e7036196b3a1b3a199c',1,'DEFINE_bool(ignore_alpha_blend, false, &quot;ignore alpha blend (useful if rendering single camera)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_align_point_cloud_8cpp.html#aae90f3602194ac6d607d48d2c2608ddc',1,'DEFINE_bool(lock_rotation, false, &quot;don&apos;t rotate the rig&quot;):&#160;AlignPointCloud.cpp'],['../_align_point_cloud_8cpp.html#a5b1aea9460559d28fda6373e45dcfda3',1,'DEFINE_bool(lock_scale, false, &quot;don&apos;t scale the rig&quot;):&#160;AlignPointCloud.cpp'],['../_align_point_cloud_8cpp.html#a939878f22b13bd12576cf54abdb935c6',1,'DEFINE_bool(lock_translation, false, &quot;don&apos;t translate the rig&quot;):&#160;AlignPointCloud.cpp'],['../_rig_aligner_8cpp.html#aae90f3602194ac6d607d48d2c2608ddc',1,'DEFINE_bool(lock_rotation, false, &quot;don&apos;t rotate the rig&quot;):&#160;RigAligner.cpp'],['../_rig_aligner_8cpp.html#a5b1aea9460559d28fda6373e45dcfda3',1,'DEFINE_bool(lock_scale, false, &quot;don&apos;t scale the rig&quot;):&#160;RigAligner.cpp'],['../_rig_aligner_8cpp.html#a939878f22b13bd12576cf54abdb935c6',1,'DEFINE_bool(lock_translation, false, &quot;don&apos;t translate the rig&quot;):&#160;RigAligner.cpp'],['../_rig_aligner_8cpp.html#a7eaab2a6b0c4268f42565306630ecc98',1,'DEFINE_bool(randomize_rig, false, &quot;create a test rig by applying a random rotation, translation and scale to the original rig&quot;):&#160;RigAligner.cpp'],['../_rig_analyzer_8cpp.html#a41fb3d5c01162ac7d7369e66ca6881d8',1,'DEFINE_bool(one_based_indexing, false, &quot;enable to index cameras starting at 1 instead of 0&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a0a63724f7211d85208ef1fdb421a73d4',1,'DEFINE_bool(perturb_cameras, false, &quot;&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a2233b7487b5b4ada35dfe3ce340b693e',1,'DEFINE_bool(z_is_down, false, &quot;modify rig from y-is-up to z-is-down&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a9c462fb57e33f69caea40617ef36ef06',1,'DEFINE_bool(z_is_up, false, &quot;modify rig from y-is-up to z-is-up&quot;):&#160;RigAnalyzer.cpp'],['../_rig_compare_8cpp.html#a106bbf87294fa84f855cd0dffb136c84',1,'DEFINE_bool(skip_align, false, &quot;skip rig alignment before comparing&quot;):&#160;RigCompare.cpp'],['../_rig_simulator_8cpp.html#a1caa3989172791466022a18d7b559a68',1,'DEFINE_bool(marble, false, &quot;if true, adds a marble (perlin noise) texture to the objects in the scene&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a7cd01882b220ca73c666ab4c9f968507',1,'DEFINE_bool(red_triangle, false, &quot;add a red triangle at (0,0)&quot;):&#160;RigSimulator.cpp']]],
  ['define_5fdouble',['DEFINE_double',['../_calibration_8cpp.html#ab4bcfead0361359106119becb0ee42e6',1,'DEFINE_double(match_score_threshold, 0.75, &quot;minimum zncc score required for a match to be included&quot;):&#160;Calibration.cpp'],['../_feature_detector_8cpp.html#a7f9bcb4fff41964f7a04ae67ca663a9b',1,'DEFINE_double(harris_parameter, 0.04, &quot;harris parameter&quot;):&#160;FeatureDetector.cpp'],['../_feature_detector_8cpp.html#ac333e3ab2b7d73361c7a699b553d7228',1,'DEFINE_double(harris_window_radius, 5, &quot;harris corner detector window radius&quot;):&#160;FeatureDetector.cpp'],['../_feature_detector_8cpp.html#a04dd641f0508a09ae577474762133c0a',1,'DEFINE_double(min_feature_quality, 0.00001, &quot;minimum feature quality&quot;):&#160;FeatureDetector.cpp'],['../_feature_detector_8cpp.html#aff73f0c6e29dcfa89a4be96c302e8b93',1,'DEFINE_double(refine_corners_epsilon, 0.000001, &quot;epsilon termiation value for refining corners to subpixel precision&quot;):&#160;FeatureDetector.cpp'],['../_feature_matcher_8cpp.html#a40c8a338cf5314319073051b1230352a',1,'DEFINE_double(depth_max, 100.0, &quot;max depth in m&quot;):&#160;FeatureMatcher.cpp'],['../_feature_matcher_8cpp.html#af8fe2376c61e31b08d8e02656ca474f4',1,'DEFINE_double(depth_min, 1.0, &quot;min depth in m&quot;):&#160;FeatureMatcher.cpp'],['../_feature_matcher_8cpp.html#a9ec018c0d8f384838346deb40e4bb8a0',1,'DEFINE_double(depth_samples, 1000, &quot;number of depths to sample&quot;):&#160;FeatureMatcher.cpp'],['../_feature_matcher_8cpp.html#a06075bcde16d518a707ee23f8bc10a74',1,'DEFINE_double(overlap_threshold, 0, &quot;minimum overlap between matched images&quot;):&#160;FeatureMatcher.cpp'],['../_feature_matcher_8cpp.html#a2b00c5a9c31270ce6a90ee630348f44d',1,'DEFINE_double(reprojected_corner_drift_tolerance, 0.5, &quot;in pixels&quot;):&#160;FeatureMatcher.cpp'],['../_feature_matcher_8cpp.html#a21cb21c607d34dd49cc9ac5e00dd8897',1,'DEFINE_double(search_overlap, 0.25, &quot;overlap fraction between search windows at different disparities&quot;):&#160;FeatureMatcher.cpp'],['../_feature_matcher_8cpp.html#a5cf0f05e48120c6681c0bffbf373e911',1,'DEFINE_double(zncc_delta_threshold, 0.05, &quot;minimum zncc score difference betwen best and second best potential matches for a corner&quot;):&#160;FeatureMatcher.cpp'],['../_geometric_calibration_8cpp.html#a96d289bc85ea235132ec99eae55fdaaa',1,'DEFINE_double(ceres_function_tolerance, 1e-6, &quot;ceres function tolerance&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#ac5b988b5ef990425b999f809128bb6cf',1,'DEFINE_double(debug_error_scale, 0, &quot;show scaled reprojection errors&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a7a378a7d67cddd2bb157613555d99220',1,'DEFINE_double(debug_matches_overlap, 1, &quot;show matches if overlap exceeds this fraction&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a87af00b13dd0102fe4a875fef4d52e03',1,'DEFINE_double(max_error, 0.5, &quot;maximum allowable error for calibration to be valid&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a114de44b4041c7e0e244569d4cd2c601',1,'DEFINE_double(outlier_factor, 5, &quot;reject if error is factor * median&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a2fc8f3b9b02bda3f7cbfa058afeb9268',1,'DEFINE_double(outlier_z_threshold, 3, &quot;z score threshold on traces to consider a camera an outlier&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a407db2ba735899ba3b2c9e370eb47ad7',1,'DEFINE_double(perturb_focals, 0, &quot;pertub focals (pixels / radian)&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a518191be9d7f4a45b6fbbaca135a1984',1,'DEFINE_double(perturb_positions, 0, &quot;perturb positions (m)&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a74ac1fb0a0685abdb3d0c19df3b05db3',1,'DEFINE_double(perturb_principals, 0, &quot;pertub principals (pixels)&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#af106827edc7eae5e31ea7911fcbcdbf1',1,'DEFINE_double(perturb_rotations, 0, &quot;perturb rotations (radians)&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a3cd741a27ec5517ae332603c7a9863af',1,'DEFINE_double(point_error_stddev, 0.5, &quot;error added to artificial points&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a35b800b9bf70d9005b88e0c4f8f881d1',1,'DEFINE_double(point_min_dist, 1, &quot;minimum distance of artificial points&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#ad8b6cc9491e97718f10632a89cd41fdb',1,'DEFINE_double(remove_sparse_overlaps, 0, &quot;reject overlaps with fewer than this fraction of the average match count&quot;):&#160;GeometricCalibration.cpp'],['../_match_corners_8cpp.html#adbd9075f58d2a3278c51ff53769d4773',1,'DEFINE_double(scale, 1, &quot;scale at which to perform matching&quot;):&#160;MatchCorners.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#a11beb0b7c213a03f6de98e73be69ccf0',1,'DEFINE_double(max_depth, 700.0, &quot;maximum depth. Use something like 20 to visualize&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#aadcac10cbe90ae94801680a307814b9f',1,'DEFINE_double(scale, 1.0, &quot;depth map resolution before decimation&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#aa3235a2cfc573199d6ead331c564b656',1,'DEFINE_double(strictness, 0.8, &quot;[0, 1] mesh simplification aggressiveness. 0 = no simplification&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#aab1511eb9e08feb1fe264201ff77e086',1,'DEFINE_double(tear_ratio, 0.95, &quot;depth ratio that causes mesh to tear&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_export_point_cloud_8cpp.html#ab67c9f7456621da13fa2d3ca2624eb03',1,'DEFINE_double(max_depth, INFINITY, &quot;depth is clamped to this value (m). Use e.g. 20 to visualize&quot;):&#160;ExportPointCloud.cpp'],['../_import_point_cloud_8cpp.html#acc59f5a139963cd19a990861bf03c8ca',1,'DEFINE_double(max_depth, INFINITY, &quot;ignore depths farther than this value (m)&quot;):&#160;ImportPointCloud.cpp'],['../_import_point_cloud_8cpp.html#aa13159eead82c362d2bd135259ecee51',1,'DEFINE_double(min_depth, 0, &quot;ignore depths closer than this value (m)&quot;):&#160;ImportPointCloud.cpp'],['../_project_cameras_to_equirects_8cpp.html#a0cc2c7359ccaef2cafeb083504e034d7',1,'DEFINE_double(depth, 1000, &quot;depth to project at (m)&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_equirects_to_cameras_8cpp.html#a0cc2c7359ccaef2cafeb083504e034d7',1,'DEFINE_double(depth, 1000, &quot;depth to project at (m)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_derp_c_l_i_8cpp.html#a032e89830598397eacb678a6c9a70ff5',1,'DEFINE_double(max_depth_m, 1e4, &quot;max depth (m)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a7851b86a218b61807e008cd6e8ae4476',1,'DEFINE_double(min_depth_m,.50, &quot;min depth (m)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a89bb3b7d581ca8f64a1f93c3c87201bd',1,'DEFINE_double(var_high_thresh, 1e-3, &quot;ignore variances higher than this threshold&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#aff03aa119db3e0a38b5b9038bb644a91',1,'DEFINE_double(var_noise_floor, 4e-5, &quot;noise variance floor on original, full-size images&quot;):&#160;DerpCLI.cpp'],['../_temporal_bilateral_filter_8cpp.html#a8ecd5b616914ed0d014396a34564020e',1,'DEFINE_double(sigma, 0.01, &quot;spatio-temporal smoothing&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a548321f95c1bfa1b7ae55efd8023e884',1,'DEFINE_double(weight_b, 0.5, &quot;Blue channel weight&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#ad51639b2ea06c116e93cf932c80e80cd',1,'DEFINE_double(weight_g, 1.0, &quot;Green channel weight&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a68e0c67d6cb342f231887d10326975a7',1,'DEFINE_double(weight_r, 1.0, &quot;Red channel weight&quot;):&#160;TemporalBilateralFilter.cpp'],['../_upsample_disparity_8cpp.html#ad378d9d9d837e0a56e69a37dbe3bce0a',1,'DEFINE_double(sigma, 0.05, &quot;bilateral filter color difference sigma&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a6a2ec2e74577fa25e9289b0c62f98fd1',1,'DEFINE_double(weight_b, 0.5, &quot;bilateral filter blue channel weight&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#acf521df18acb5dfd09c42f0bf0138691',1,'DEFINE_double(weight_g, 0.5, &quot;bilateral filter green channel weight&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a94a49088e821dd4d4be9ab0fab861b22',1,'DEFINE_double(weight_r, 1.0, &quot;bilateral filter red channel weight&quot;):&#160;UpsampleDisparity.cpp'],['../_correct_vignetting_8cpp.html#ad35b58723f9c29eedbad2432d5df82ce',1,'DEFINE_double(principal_x, -1, &quot;principal x-coord (&lt; 0 = width / 2)&quot;):&#160;CorrectVignetting.cpp'],['../_correct_vignetting_8cpp.html#a4d2136fc8ead8083c92e5462217e744c',1,'DEFINE_double(principal_y, -1, &quot;principal y-coord (&lt; 0 = height / 2)&quot;):&#160;CorrectVignetting.cpp'],['../_convert_to_binary_8cpp.html#a804a23d4714e1545c005b198340f5132',1,'DEFINE_double(color_scale, 1, &quot;optional color scale before compression &amp; fusion (&gt;= 1 = no scale)&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#a68248537d8bc565af384d912e0ef6c63',1,'DEFINE_double(depth_scale, 1, &quot;optional depthmap scale before simplification (&gt;= 1 = no scale)&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#aead3f1a42f58f83f586b13495622a623',1,'DEFINE_double(gamma_correction, 2.2/1.8, &quot;exponent to raise color channels before BC7 encoding&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#aab1511eb9e08feb1fe264201ff77e086',1,'DEFINE_double(tear_ratio, 0.95, &quot;depth ratio that causes mesh to tear&quot;):&#160;ConvertToBinary.cpp'],['../_generate_camera_overlaps_8cpp.html#a614f863c4e8a50348b9063fd795b327d',1,'DEFINE_double(scale, 0.5, &quot;image scale factor&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_equirect_8cpp.html#a3be0b125343f3b9d2eaa02840e53dd4c',1,'DEFINE_double(depth_max, 10.0, &quot;max depth in m&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#af8fe2376c61e31b08d8e02656ca474f4',1,'DEFINE_double(depth_min, 1.0, &quot;min depth in m&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#a5e95536339d4b004675c3b40ab4f74c3',1,'DEFINE_double(scale, 1, &quot;image scale factor&quot;):&#160;GenerateEquirect.cpp'],['../_generate_foreground_masks_8cpp.html#a0d681a77291470d7e8af3ac800e4d063',1,'DEFINE_double(threshold, 0.04, &quot;foreground/background RGB L2-norm threshold [0..1]&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_keypoint_projections_8cpp.html#a1c7a6c089e45bddc1372c38dc6cb4326',1,'DEFINE_double(height_stride, 0.125, &quot;x grid stride in percent&quot;):&#160;GenerateKeypointProjections.cpp'],['../_generate_keypoint_projections_8cpp.html#adce59c6d9a2ae86d6a333772ee636439',1,'DEFINE_double(length_stride, 0.125, &quot;y grid stride in percent&quot;):&#160;GenerateKeypointProjections.cpp'],['../_geometric_consistency_8cpp.html#a77e7bea3b261998ca49bc56cb7657e80',1,'DEFINE_double(agree_fraction, 0.75, &quot;fraction considered in agreement&quot;):&#160;GeometricConsistency.cpp'],['../_geometric_consistency_8cpp.html#aa481f211df7a2c6a9e568955ae12e3ed',1,'DEFINE_double(disparity_step, 0.5, &quot;pixels per disparity step&quot;):&#160;GeometricConsistency.cpp'],['../_geometric_consistency_8cpp.html#a3fa5648cbd03c12940deaca9598e675b',1,'DEFINE_double(downscale, 4, &quot;reduced resolution output&quot;):&#160;GeometricConsistency.cpp'],['../_simple_mesh_renderer_8cpp.html#a480005fcb995edfadfab78002a29e50f',1,'DEFINE_double(horizontal_fov, 90, &quot;horizontal field of view for rendering (degrees)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_view_color_variance_thresholds_8cpp.html#a2a4dcc0675f2077de2ec5a67baaa4825',1,'DEFINE_double(var_high_max, 5e-2, &quot;max high variance allowed&quot;):&#160;ViewColorVarianceThresholds.cpp'],['../_view_color_variance_thresholds_8cpp.html#a8b0fb29ef4939622c40fdfab19bff460',1,'DEFINE_double(var_low_max, 4e-3, &quot;max low variance allowed&quot;):&#160;ViewColorVarianceThresholds.cpp'],['../_align_point_cloud_8cpp.html#ac05b570c855b05fb5c45a607a721fcd8',1,'DEFINE_double(lidar_match_score, 0.85, &quot;minimum score for an accepted lidar match&quot;):&#160;AlignPointCloud.cpp'],['../_align_point_cloud_8cpp.html#a114de44b4041c7e0e244569d4cd2c601',1,'DEFINE_double(outlier_factor, 5, &quot;reject if error is factor * median&quot;):&#160;AlignPointCloud.cpp'],['../_rig_aligner_8cpp.html#a15867151f28a50b877a257fd1ec88cda',1,'DEFINE_double(rng_seed, 1, &quot;random number generator seed&quot;):&#160;RigAligner.cpp'],['../_rig_analyzer_8cpp.html#a333b07414c28026a4d84f5892a683141',1,'DEFINE_double(custom, -1, &quot;custom angle away from north&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a9fb1130a2bbab3178e095fdabddcdc76',1,'DEFINE_double(discard_poles, 0, &quot;degrees from poles to ignore&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a5206878690c458cc038d58cfd80e88b9',1,'DEFINE_double(min_distance, 0.50, &quot;min distance to test&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a488bc8cdbde20f96865fdac72c1071cc',1,'DEFINE_double(perturb_focals, 0, &quot;pertub focals&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a1f20860f797e368d18ad10696c1ea85d',1,'DEFINE_double(perturb_positions, 0, &quot;perturb positions (cm)&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a74ac1fb0a0685abdb3d0c19df3b05db3',1,'DEFINE_double(perturb_principals, 0, &quot;pertub principals (pixels)&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#af106827edc7eae5e31ea7911fcbcdbf1',1,'DEFINE_double(perturb_rotations, 0, &quot;perturb rotations (radians)&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a0374df46ab984212725a87c0b7c34fe0',1,'DEFINE_double(radius, 0, &quot;change rig radius&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#ac8ea85218d9398cf1e7bc2b6c9eccd74',1,'DEFINE_double(scale_resolution, 1, &quot;scale camera resolutions&quot;):&#160;RigAnalyzer.cpp'],['../_rig_simulator_8cpp.html#ac6d73c0a3508054c3083998b3310280a',1,'DEFINE_double(ceiling_depth, 0, &quot;depth of ceiling texture (m)&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#abbef2ce738281af797b3ac4f9c8eecd4',1,'DEFINE_double(ceiling_position, 0, &quot;how far up the ceiling is (m)&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a1bee1664f858a3885a92465c7e31eb62',1,'DEFINE_double(ceiling_width, 0, &quot;width of ceiling texture (m)&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#afadeb4d1f50cf55f621601259e16f908',1,'DEFINE_double(ftheta_image_circle_fov, 166.667, &quot;ftheta FOV, i.e. number of degrees spanned at the image circle&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a03279f7e4a4b740ad32820f23e827332',1,'DEFINE_double(ground_plane_dist_m, 1.70, &quot;for &apos;ground_plane&apos; scene, distance from camera to ground&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ad5867d3a22eadf3d16192dcebc5ee00c',1,'DEFINE_double(interpupillary_radius, 3.2, &quot;half distance between eyes&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ab8b23ad8f993b5e5e2aec9e74d4ac809',1,'DEFINE_double(marble_scale, 0.1, &quot;scale applied to marble texture&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a6a827310018276ff5c2847ab68f0c7f9',1,'DEFINE_double(max_icosahedron_dist, 250, &quot;maximum distance from origin that a randomly generated icosahedron can spawn&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a5137eb34e0c482563a30b1652c1eede0',1,'DEFINE_double(max_icosahedron_radius, 50, &quot;max radius of a randomly generated icosahedron&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a9849b9cf11302c9095c6f8f83f78e702',1,'DEFINE_double(min_icosahedron_dist, 100, &quot;minimum distance from a center of camera to the closest point on a randomly generated icosahedron&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ab345b8af3fca81e8c01832099487dd4f',1,'DEFINE_double(min_icosahedron_radius, 20, &quot;min radius of a randomly generated icosahedron&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a4f0777035b7729563c3aeb263af57fed',1,'DEFINE_double(noise_amplitude, 0.0, &quot;amount of noise to be added to pixels (to simulate real camera noise). pixel intensities are scaled in 0...255&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a753dc8a272ff0f5bfeebf2be2aa3437a',1,'DEFINE_double(pinhole_aspect_ratio, 1.0, &quot;aspect ratio of pinhole lens = horizontal fov / vertical fov&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a17a36d1c349e62cd0063a2f57c77aa04',1,'DEFINE_double(pinhole_fov_horizontal, 77.7, &quot;horizontal FOV of pinhole lens (degrees)&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ac9bd93d0d9de6db6c8ed1618d50428ec',1,'DEFINE_double(rig_radius, 0.218, &quot;radius of the rig/sphere of cameras (m). distance from center to lens exit pupil.&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ac940ec3875fb1b25aa1d3aeb1908c9d0',1,'DEFINE_double(top_cam_vertical_offset, 13.0, &quot;distance from center plane to top camera&quot;):&#160;RigSimulator.cpp']]],
  ['define_5fint32',['DEFINE_int32',['../_calibration_8cpp.html#aae0f1f3dc21699aea1a3790d95f03440',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = max allowed, 0 = no threading)&quot;):&#160;Calibration.cpp'],['../_feature_detector_8cpp.html#ac89dc65090c8e2f020fa195f3b7a449e',1,'DEFINE_int32(deduplicate_radius, 3, &quot;remove duplicate corners found at different octaves&quot;):&#160;FeatureDetector.cpp'],['../_feature_detector_8cpp.html#ad994a7a97daac8ef00c63713d75f287f',1,'DEFINE_int32(max_corners, 10000, &quot;maximum number of corners to detect at each level&quot;):&#160;FeatureDetector.cpp'],['../_feature_detector_8cpp.html#a6b48dd96eeb6e6cc6837538f08b78f37',1,'DEFINE_int32(min_feature_distance, 10, &quot;minimum distance between features in pixels&quot;):&#160;FeatureDetector.cpp'],['../_feature_detector_8cpp.html#a293979782de1a75283463fb9a30c5122',1,'DEFINE_int32(refine_corners_radius, 5, &quot;window radius for refining corners to subpixel precision&quot;):&#160;FeatureDetector.cpp'],['../_feature_detector_8cpp.html#ab608bce8af605845f3cce5180b09c25e',1,'DEFINE_int32(zncc_window_radius, 16, &quot;zncc window radius in pixels&quot;):&#160;FeatureDetector.cpp'],['../_feature_matcher_8cpp.html#a6e415dbec18dd0f56afec950a32340b1',1,'DEFINE_int32(search_radius, 100, &quot;search radius in pixels&quot;):&#160;FeatureMatcher.cpp'],['../_geometric_calibration_8cpp.html#a7f52601146c83bc4a2cccaa1359a3923',1,'DEFINE_int32(cap_traces, 0, &quot;speed up solver by capping the number of traces&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#af625efe4d18d841ae8f41a1e286ff6a7',1,'DEFINE_int32(ceres_threads, -1, &quot;number of threads used by ceres. requires compiled support for multithreading (default 1)&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a267a05977b5fa4d1aa349c79045ff395',1,'DEFINE_int32(experiments, 1, &quot;calibrate multiple times&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a12f905683b878b94f3d6845d4453fb1c',1,'DEFINE_int32(min_traces, 10, &quot;minimum number of traces for camera to be sufficiently constrained&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#aa2f02be10eb6cf0215d3b623c76cc552',1,'DEFINE_int32(pass_count, 10, &quot;number of passes&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a19c7b73be513e7c1dd2da740aa89dede',1,'DEFINE_int32(point_count, 10000, &quot;artificial points to generate&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a144f2cecb79f6c9d58bb8dfa4491c109',1,'DEFINE_int32(seed, -1, &quot;seed for random number generator&quot;):&#160;GeometricCalibration.cpp'],['../_match_corners_8cpp.html#a40d6ffc2621e071865fc5b2193f523fa',1,'DEFINE_int32(camera_count, 0, &quot;Total number of cameras to match. Default value of 0 will match all the cameras in the json&quot;):&#160;MatchCorners.cpp'],['../_match_corners_8cpp.html#a6caa51eb702f77e0aa7fc8531606402d',1,'DEFINE_int32(min_features, 1500, &quot;minimum number of features to consider calibration valid&quot;):&#160;MatchCorners.cpp'],['../_match_corners_8cpp.html#a97995b0d3e992dc6de70f9aa26311a82',1,'DEFINE_int32(octave_count, 4, &quot;number of resolutions to use when looking for features&quot;):&#160;MatchCorners.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#ac9a7029fc91e4c9d66081e3920ad8a54',1,'DEFINE_int32(num_faces, 200000, &quot;number of output faces&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#ac890f592394986d5e3be66e9642a4099',1,'DEFINE_int32(threads, 12, &quot;number of threads&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_export_point_cloud_8cpp.html#a7c6f16cf443139645b96d278467b936e',1,'DEFINE_int32(subsample, 1, &quot;how often we sample (&gt;= 1)&quot;):&#160;ExportPointCloud.cpp'],['../_export_point_cloud_8cpp.html#a972900e388abb12ba6e6a995440115c6',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = auto, 0 = none)&quot;):&#160;ExportPointCloud.cpp'],['../_import_point_cloud_8cpp.html#a972900e388abb12ba6e6a995440115c6',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = auto, 0 = none)&quot;):&#160;ImportPointCloud.cpp'],['../_import_point_cloud_8cpp.html#a23fbd5f2ae6333e920b0cfbaa6bf3329',1,'DEFINE_int32(width, 1024, &quot;width of output camera images (0 = size from rig file)&quot;):&#160;ImportPointCloud.cpp'],['../_project_cameras_to_equirects_8cpp.html#ae7eab33d8e3063032a9be741e67075dd',1,'DEFINE_int32(eqr_width, 1024, &quot;equirect width (pixels)&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_equirects_to_cameras_8cpp.html#a972900e388abb12ba6e6a995440115c6',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = auto, 0 = none)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_project_equirects_to_cameras_8cpp.html#a798d313112bc7bbb0572e57fcaa2c022',1,'DEFINE_int32(width, 0, &quot;width of projected camera images (0 = size from rig file)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_derp_c_l_i_8cpp.html#aba790c315878fb25dc72fc29a86c06e0',1,'DEFINE_int32(level_end, -1, &quot;level to end at (-1 = finest)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a95aafa2a2885c0e1fd91e52726136061',1,'DEFINE_int32(level_start, -1, &quot;level to start at (-1 = coarsest)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#ae28ffbfdc80270dee929603fba99a65e',1,'DEFINE_int32(mismatches_start_level, -1, &quot;(-1 = no mismatch handling)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#adc4adfbf24ddf9163db65a95892daa2e',1,'DEFINE_int32(num_levels, -1, &quot;number of levels in the pyramid (-1 = uses highest level)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a9654091dfc45c28058575a8503df6e2a',1,'DEFINE_int32(ping_pong_iterations, 1, &quot;number of spatial propagation iterations&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a1ce8d6796383b469adbdcdf33fcb6bf2',1,'DEFINE_int32(random_proposals, 2, &quot;number of proposed random disparities before propagation&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a35370ac1d669e800c0838c23be642197',1,'DEFINE_int32(resolution, 2048, &quot;Output resolution (width in pixels)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a972900e388abb12ba6e6a995440115c6',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = auto, 0 = none)&quot;):&#160;DerpCLI.cpp'],['../_layer_disparities_8cpp.html#a972900e388abb12ba6e6a995440115c6',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = auto, 0 = none)&quot;):&#160;LayerDisparities.cpp'],['../_temporal_bilateral_filter_8cpp.html#a671dd11ede39e4f24943542116c8daf6',1,'DEFINE_int32(level, 0, &quot;pyramid level being processed&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#ada2f7205e6f114ce31323584244e059b',1,'DEFINE_int32(resolution, 2048, &quot;8192, 4096, 2048, 1024, 512, 256&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a6ee0cbc9957f22b91f7ccb63f5943ad5',1,'DEFINE_int32(space_radius, -1, &quot;space filtering radius&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a972900e388abb12ba6e6a995440115c6',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = auto, 0 = none)&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#ae00dc808e44a9ca8696a658802a38145',1,'DEFINE_int32(time_radius, 2, &quot;temporal filtering radius&quot;):&#160;TemporalBilateralFilter.cpp'],['../_upsample_disparity_8cpp.html#a34729eba5675f29f5cba1dddb9ad28c3',1,'DEFINE_int32(height, -1, &quot;output image height (aspect ratio maintained if unspecified)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a8e7f7935e7f7e3fabca54881d8de2fd7',1,'DEFINE_int32(resolution, -1, &quot;output resolution width in pixels (required)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a972900e388abb12ba6e6a995440115c6',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = auto, 0 = none)&quot;):&#160;UpsampleDisparity.cpp'],['../_raw_to_rgb_8cpp.html#a0b161edd4335d711e1cb9ffd233d4219',1,'DEFINE_int32(pow2_downscale_factor, 1, &quot;Amount to \&quot;bin-down\&quot; the input. Legal values are 1, 2, 4, and 8&quot;):&#160;RawToRgb.cpp'],['../_convert_to_binary_8cpp.html#a47775ed097f0e32cb2880b8b98e531e7',1,'DEFINE_int32(fuse_strip, 1, &quot;number of strip files&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#aae0f1f3dc21699aea1a3790d95f03440',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = max allowed, 0 = no threading)&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#a7e29f545696a78ec826852095fb084ee',1,'DEFINE_int32(triangles, 150000, &quot;number of triangles per camera mesh (&lt;= 0: no simplification)&quot;):&#160;ConvertToBinary.cpp'],['../_compute_rephotography_errors_8cpp.html#af60aa10a4e4488df7201d1fe7e26ad39',1,'DEFINE_int32(stat_radius, 1, &quot;local statistics window radius&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_generate_equirect_8cpp.html#aae0f1f3dc21699aea1a3790d95f03440',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = max allowed, 0 = no threading)&quot;):&#160;GenerateEquirect.cpp'],['../_generate_foreground_masks_8cpp.html#a9673b03a5c6600be53f74f9d7f5761c1',1,'DEFINE_int32(blur_radius, 1, &quot;Gaussian blur radius (0 = no blur)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#a07f20f540e1e8616382ca7364c19e4b2',1,'DEFINE_int32(morph_closing_size, 4, &quot;Morphological closing size (0 = no closing)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#aae0f1f3dc21699aea1a3790d95f03440',1,'DEFINE_int32(threads, -1, &quot;number of threads (-1 = max allowed, 0 = no threading)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#a7db750d375105b27714ba962dd0fd9a6',1,'DEFINE_int32(width, 2048, &quot;optional downscaled output width&quot;):&#160;GenerateForegroundMasks.cpp'],['../_geometric_consistency_8cpp.html#a1030635b11b11b223053e3a7c13639c5',1,'DEFINE_int32(median, 0, &quot;radius of median filter applied to input&quot;):&#160;GeometricConsistency.cpp'],['../_geometric_consistency_8cpp.html#a7222ca200605fb05e0ca1dd477a5b637',1,'DEFINE_int32(pass_count, 2, &quot;how many times to refine depth&quot;):&#160;GeometricConsistency.cpp'],['../_simple_mesh_renderer_8cpp.html#a24d6d496bdf253fce7023182fbbcf7a6',1,'DEFINE_int32(height, -1, &quot;height of the rendering (pixels), default is width / 2&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a28a7d1a018d21cbb5ccae92c30b736b8',1,'DEFINE_int32(width, 3072, &quot;width of the rendering (pixels)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_view_color_variance_thresholds_8cpp.html#ae6d0b12834ed4f83eabed88b35c4dc2c',1,'DEFINE_int32(width, 2048, &quot;loaded image width (0 = original size)&quot;):&#160;ViewColorVarianceThresholds.cpp'],['../_view_foreground_mask_thresholds_8cpp.html#a6eecba09081a74eebe6d85837aee68eb',1,'DEFINE_int32(blur_radius_max, 20, &quot;max Gaussian blur radius allowed&quot;):&#160;ViewForegroundMaskThresholds.cpp'],['../_view_foreground_mask_thresholds_8cpp.html#a1a2712058892504dc994ac2a06c94d25',1,'DEFINE_int32(morph_closing_size_max, 20, &quot;max morphological closing size allowed&quot;):&#160;ViewForegroundMaskThresholds.cpp'],['../_view_foreground_mask_thresholds_8cpp.html#ae6d0b12834ed4f83eabed88b35c4dc2c',1,'DEFINE_int32(width, 2048, &quot;loaded image width (0 = original size)&quot;):&#160;ViewForegroundMaskThresholds.cpp'],['../_rig_analyzer_8cpp.html#a9b61465026c29a8a33f9a25efe4fd37c',1,'DEFINE_int32(perturb_seed, 1, &quot;seed for perturb cameras. Default: 1, same as no seed&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a41e16b930140a462a7c6ce96f27c4d17',1,'DEFINE_int32(sample_count, 100000, &quot;number of samples&quot;):&#160;RigAnalyzer.cpp'],['../_rig_simulator_8cpp.html#aae5ec088f5d89e0d5629fc58d6656ff7',1,'DEFINE_int32(anti_alias_supersample, 1, &quot;1 = no supersampling, 2 or higher = anti-alias supersampling&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#aca329a56c75ea89864361ba0211d228c',1,'DEFINE_int32(eqr_height, 1540, &quot;height of equirect output&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a34805f618b0f7db4d3debbb476ff30c1',1,'DEFINE_int32(eqr_width, 3080, &quot;width of equirect output&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a1ca1a9c625a00490c541816ed3890a76',1,'DEFINE_int32(ftheta_height, 400, &quot;height of ftheta camera output&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#af03627a074a1f634398fa8c358941dd4',1,'DEFINE_int32(ftheta_image_circle_radius, 250, &quot;image circle radius corresponding to specified ftheta FOV&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ae181af00485ec4efe27ff7ccdf38a21d',1,'DEFINE_int32(ftheta_width, 300, &quot;width of ftheta camera output&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a1d1e52db137bdd2daef03c982c059a6e',1,'DEFINE_int32(num_cams_in_ring, 14, &quot;number of cameras in simulated rings of cameras&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a603587b50e2ef0c079db174c4aca10d5',1,'DEFINE_int32(num_random_icosahedrons, 250, &quot;number of icosahedrons to generate&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#af52d290c7034b96667eedb54ba78672e',1,'DEFINE_int32(pinhole_height, 512, &quot;height of pinhole camera output&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a4601e7154ee7e7113220239ad9a67a85',1,'DEFINE_int32(pinhole_width, 512, &quot;width of pinhole camera output&quot;):&#160;RigSimulator.cpp'],['../_gl_viewer_8cpp.html#afd419c4ba2801b4fea9e62634a46f3bb',1,'DEFINE_int32(readahead, 3, &quot;how many frames to read ahead&quot;):&#160;GlViewer.cpp'],['../_rift_viewer_8cpp.html#a0d50db0e7a75a675512d19fab1ec81b4',1,'DEFINE_int32(fps, 30, &quot;video framerate&quot;):&#160;RiftViewer.cpp']]],
  ['define_5fstring',['DEFINE_string',['../_align_colors_8cpp.html#ab330c2b4639ef9273e95095cb3ab9bfa',1,'DEFINE_string(calibrated_rig, &quot;&quot;, &quot;path to calibrated green rig .json filename (required)&quot;):&#160;AlignColors.cpp'],['../_align_colors_8cpp.html#af6fbb6883b9bcdc6788f1629a05e0807',1,'DEFINE_string(cameras, &quot;&quot;, &quot;cameras to align (comma-separated)&quot;):&#160;AlignColors.cpp'],['../_align_colors_8cpp.html#a1621d256f00db877a3091fe1c43e415f',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images (required)&quot;):&#160;AlignColors.cpp'],['../_align_colors_8cpp.html#af0e26ae6b79f835955b587dbb30a8035',1,'DEFINE_string(first, &quot;&quot;, &quot;first frame to process (lexical)&quot;):&#160;AlignColors.cpp'],['../_align_colors_8cpp.html#a0c580ee62ee4fb1f94d3ee4486b89393',1,'DEFINE_string(last, &quot;&quot;, &quot;last frame to process (lexical)&quot;):&#160;AlignColors.cpp'],['../_align_colors_8cpp.html#af92af30ee95552f5171851b0c3524547',1,'DEFINE_string(output, &quot;&quot;, &quot;path to output directory (must be different than color path)&quot;):&#160;AlignColors.cpp'],['../_align_colors_8cpp.html#a7c54907b7bc6d3ee81b4e40588aa2932',1,'DEFINE_string(rig_blue, &quot;&quot;, &quot;path to camera blue rig .json filename (required)&quot;):&#160;AlignColors.cpp'],['../_align_colors_8cpp.html#a20db3789a69f84fd395d374bf6c1b1ed',1,'DEFINE_string(rig_green, &quot;&quot;, &quot;path to camera green rig .json filename (required)&quot;):&#160;AlignColors.cpp'],['../_align_colors_8cpp.html#a8dbf8ecc9b2bd9a4dd9ac0987cf8adaf',1,'DEFINE_string(rig_red, &quot;&quot;, &quot;path to camera red rig .json filename (required)&quot;):&#160;AlignColors.cpp'],['../_calibration_8cpp.html#a2c3279563fb0dacbf074c6ce45689db9',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input data&quot;):&#160;Calibration.cpp'],['../_calibration_8cpp.html#ad8d4e9c0456d9fbf52d9cec2fc4b470a',1,'DEFINE_string(frame, &quot;&quot;, &quot;frame to process (lexical)&quot;):&#160;Calibration.cpp'],['../_calibration_8cpp.html#aa0b6ad5cb0cb3081a9243bc081e74361',1,'DEFINE_string(matches, &quot;&quot;, &quot;path to matches .json file&quot;):&#160;Calibration.cpp'],['../_calibration_8cpp.html#a96978ec0b3d08adf77c42962c92fc6c3',1,'DEFINE_string(rig_in, &quot;&quot;, &quot;input camera rig .json filename&quot;):&#160;Calibration.cpp'],['../_calibration_8cpp.html#a47d4d58d12341acabfdb8c89788f996c',1,'DEFINE_string(rig_out, &quot;&quot;, &quot;output camera rig .json filename&quot;):&#160;Calibration.cpp'],['../_geometric_calibration_8cpp.html#a3bb257900a5f4a1aa322bb9a937b677d',1,'DEFINE_string(debug_dir, &quot;&quot;, &quot;path to debug output&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a4ed19ac76a66e0e93e86b3c077958d68',1,'DEFINE_string(errors_dir, &quot;&quot;, &quot;directory where errors will be saved&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a6538159383775c31e86335862754665e',1,'DEFINE_string(points_file, &quot;&quot;, &quot;path to output calibration points file, default next to output&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#af1f139fc0aec66a283deb5356de32031',1,'DEFINE_string(points_file_json, &quot;&quot;, &quot;path to output calibration points file including reference points, default next to output&quot;):&#160;GeometricCalibration.cpp'],['../_geometric_calibration_8cpp.html#a17fe573bc9eec2136170d6b617a1e459',1,'DEFINE_string(reference_camera, &quot;&quot;, &quot;reference camera to lock if positions are unlocked&quot;):&#160;GeometricCalibration.cpp'],['../_match_corners_8cpp.html#a5a04a4f47297fb9397131c873fa2a61a',1,'DEFINE_string(color_channel, &quot;grayscale&quot;, &quot;color channel. supported channels: grayscale, red, green, blue&quot;):&#160;MatchCorners.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#af070bd4878b6685c71b03971a64348c0',1,'DEFINE_string(input_png_color, &quot;&quot;, &quot;path to input color png (required)&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#aa9abe636a6396fb0d6d83a30a04454bc',1,'DEFINE_string(input_png_disp, &quot;&quot;, &quot;path to input disparity png (required)&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_create_obj_from_disparity_equirect_8cpp.html#aff9628fa5670a2a68cd3987aa084fdec',1,'DEFINE_string(output_obj, &quot;&quot;, &quot;path to output obj file (required)&quot;):&#160;CreateObjFromDisparityEquirect.cpp'],['../_export_point_cloud_8cpp.html#a5e590f13b25c6975647e0ae4ac105bf2',1,'DEFINE_string(cameras, &quot;&quot;, &quot;comma-separated cameras to render (empty for all)&quot;):&#160;ExportPointCloud.cpp'],['../_export_point_cloud_8cpp.html#a1621d256f00db877a3091fe1c43e415f',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images (required)&quot;):&#160;ExportPointCloud.cpp'],['../_export_point_cloud_8cpp.html#ae4547a085ad9ef8225c7936b7180e932',1,'DEFINE_string(disparity, &quot;&quot;, &quot;path to disparity files (.pfm) (required)&quot;):&#160;ExportPointCloud.cpp'],['../_export_point_cloud_8cpp.html#a09ceb91a53dab1c4b656ad63fc378238',1,'DEFINE_string(frame, &quot;000000&quot;, &quot;frame to process (lexical)&quot;):&#160;ExportPointCloud.cpp'],['../_export_point_cloud_8cpp.html#a608efc0cf46f595155e30e37fc64260f',1,'DEFINE_string(output, &quot;&quot;, &quot;output filename (required)&quot;):&#160;ExportPointCloud.cpp'],['../_export_point_cloud_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;ExportPointCloud.cpp'],['../_import_point_cloud_8cpp.html#a5e590f13b25c6975647e0ae4ac105bf2',1,'DEFINE_string(cameras, &quot;&quot;, &quot;comma-separated cameras to render (empty for all)&quot;):&#160;ImportPointCloud.cpp'],['../_import_point_cloud_8cpp.html#ab749b6c7c2d41854879ef999c9c43ef9',1,'DEFINE_string(output, &quot;&quot;, &quot;output directory (required)&quot;):&#160;ImportPointCloud.cpp'],['../_import_point_cloud_8cpp.html#aba3e6bcefe2ffd9c618452d264aab34a',1,'DEFINE_string(point_cloud, &quot;&quot;, &quot;input point cloud (required)&quot;):&#160;ImportPointCloud.cpp'],['../_import_point_cloud_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;ImportPointCloud.cpp'],['../_png_to_pfm_8cpp.html#a54989870f0e63b41154b4800b37fdaf1',1,'DEFINE_string(pfm, &quot;&quot;, &quot;path to output disparity pfm (required)&quot;):&#160;PngToPfm.cpp'],['../_png_to_pfm_8cpp.html#a06dbeaddab633fde1eb845f8e6bc2a40',1,'DEFINE_string(png, &quot;&quot;, &quot;path to input disparity png (required)&quot;):&#160;PngToPfm.cpp'],['../_project_cameras_to_equirects_8cpp.html#a5e590f13b25c6975647e0ae4ac105bf2',1,'DEFINE_string(cameras, &quot;&quot;, &quot;comma-separated cameras to render (empty for all)&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_cameras_to_equirects_8cpp.html#a1621d256f00db877a3091fe1c43e415f',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images (required)&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_cameras_to_equirects_8cpp.html#a25d37c2ac18a794e3fbc6f378e7adb4e',1,'DEFINE_string(file_type, &quot;png&quot;, &quot;Supports any image type allowed in OpenCV&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_cameras_to_equirects_8cpp.html#aac49a76ebf54f164552a9f4b7772b36e',1,'DEFINE_string(first, &quot;000000&quot;, &quot;first frame to process (lexical)&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_cameras_to_equirects_8cpp.html#ac929fbee9c0337309ebab423a97f9b38',1,'DEFINE_string(last, &quot;000000&quot;, &quot;last frame to process (lexical)&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_cameras_to_equirects_8cpp.html#ab749b6c7c2d41854879ef999c9c43ef9',1,'DEFINE_string(output, &quot;&quot;, &quot;output directory (required)&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_cameras_to_equirects_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;ProjectCamerasToEquirects.cpp'],['../_project_equirects_to_cameras_8cpp.html#a5e590f13b25c6975647e0ae4ac105bf2',1,'DEFINE_string(cameras, &quot;&quot;, &quot;comma-separated cameras to render (empty for all)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_project_equirects_to_cameras_8cpp.html#a6f6cff8d0a98ddbd34fd9500c6b02fd1',1,'DEFINE_string(eqr_masks, &quot;&quot;, &quot;path to input equirect masks (required)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_project_equirects_to_cameras_8cpp.html#a25d37c2ac18a794e3fbc6f378e7adb4e',1,'DEFINE_string(file_type, &quot;png&quot;, &quot;Supports any image type allowed in OpenCV&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_project_equirects_to_cameras_8cpp.html#ae2162e0e86563c1c80b081cab9b6d1e0',1,'DEFINE_string(first, &quot;000000&quot;, &quot;first frame to process (lexical) (required)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_project_equirects_to_cameras_8cpp.html#a0cbb67d79517bbf772ccb7fca38c8239',1,'DEFINE_string(last, &quot;000000&quot;, &quot;last frame to process (lexical) (required)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_project_equirects_to_cameras_8cpp.html#ab749b6c7c2d41854879ef999c9c43ef9',1,'DEFINE_string(output, &quot;&quot;, &quot;output directory (required)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_project_equirects_to_cameras_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;ProjectEquirectsToCameras.cpp'],['../_derp_c_l_i_8cpp.html#ae4c72ccfb320cc63d0967c5d1bfc84c4',1,'DEFINE_string(background_disp, &quot;&quot;, &quot;path to background disparities&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a0976bcdd6b6eb7d819948609c83ff5fd',1,'DEFINE_string(background_frame, &quot;000000&quot;, &quot;background frame (lexical)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#ad6a9575be0a2faad46768474df60b539',1,'DEFINE_string(cameras, &quot;&quot;, &quot;comma-separated destinations to render (empty for all)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#ab3136f5a8944dc0bb656253c5623e15c',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#aac49a76ebf54f164552a9f4b7772b36e',1,'DEFINE_string(first, &quot;000000&quot;, &quot;first frame to process (lexical)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a46e64fa86a34c84d00cb3f45ac93bf94',1,'DEFINE_string(foreground_masks, &quot;&quot;, &quot;path to foreground masks&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#ad6ce7a9bcf19e16f35be95223ff6abca',1,'DEFINE_string(input_root, &quot;&quot;, &quot;path to input data (required)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#ac929fbee9c0337309ebab423a97f9b38',1,'DEFINE_string(last, &quot;000000&quot;, &quot;last frame to process (lexical)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a7ab3fe766eb26b81e734977d8949fe83',1,'DEFINE_string(output_formats, &quot;&quot;, &quot;saved formats, comma separated (exr, png, pfm supported)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#ac68baed39386a09dea98fd0069cce78a',1,'DEFINE_string(output_root, &quot;&quot;, &quot;path to output directory (required)&quot;):&#160;DerpCLI.cpp'],['../_derp_c_l_i_8cpp.html#a5eaed363312b7f2aed3434794f9023a2',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json&quot;):&#160;DerpCLI.cpp'],['../_layer_disparities_8cpp.html#adfd69ce522f1d1270e5dfe90a1b597f7',1,'DEFINE_string(background_disp, &quot;&quot;, &quot;path to background disparity directory (required)&quot;):&#160;LayerDisparities.cpp'],['../_layer_disparities_8cpp.html#a3df36ccbc228b7f1225892cc878d489c',1,'DEFINE_string(background_frame, &quot;000000&quot;, &quot;background frame to process (lexical)&quot;):&#160;LayerDisparities.cpp'],['../_layer_disparities_8cpp.html#a4fae27d40cecc0e5a6e6ed137ef8ba0a',1,'DEFINE_string(cameras, &quot;&quot;, &quot;destination cameras&quot;):&#160;LayerDisparities.cpp'],['../_layer_disparities_8cpp.html#aac49a76ebf54f164552a9f4b7772b36e',1,'DEFINE_string(first, &quot;000000&quot;, &quot;first frame to process (lexical)&quot;):&#160;LayerDisparities.cpp'],['../_layer_disparities_8cpp.html#acc5545e00ea26664628e98c17ffa86bb',1,'DEFINE_string(foreground_disp, &quot;&quot;, &quot;path to foreground disparity directory (required)&quot;):&#160;LayerDisparities.cpp'],['../_layer_disparities_8cpp.html#ac929fbee9c0337309ebab423a97f9b38',1,'DEFINE_string(last, &quot;000000&quot;, &quot;last frame to process (lexical)&quot;):&#160;LayerDisparities.cpp'],['../_layer_disparities_8cpp.html#a34d68a63b16c7690f834de9709fae7e7',1,'DEFINE_string(output, &quot;&quot;, &quot;path to output disparity directory&quot;):&#160;LayerDisparities.cpp'],['../_layer_disparities_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;LayerDisparities.cpp'],['../_temporal_bilateral_filter_8cpp.html#a2064ef216694916c82ff5b97f75bf54d',1,'DEFINE_string(color, &quot;&quot;, &quot;color directory&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a4fae27d40cecc0e5a6e6ed137ef8ba0a',1,'DEFINE_string(cameras, &quot;&quot;, &quot;destination cameras&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a79558dcbf902e264e3b9c88e33f8d9a0',1,'DEFINE_string(disparity, &quot;&quot;, &quot;disparity directory&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#aac49a76ebf54f164552a9f4b7772b36e',1,'DEFINE_string(first, &quot;000000&quot;, &quot;first frame to process (lexical)&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a9df959900828e8c78db8496937ea06da',1,'DEFINE_string(foreground_masks, &quot;&quot;, &quot;foreground masks directory&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#ad3c6282a366752eb9edfb63c456fd7b3',1,'DEFINE_string(input_root, &quot;&quot;, &quot;output root directory (required)&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#ac929fbee9c0337309ebab423a97f9b38',1,'DEFINE_string(last, &quot;000000&quot;, &quot;last frame to process (lexical)&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a7ab3fe766eb26b81e734977d8949fe83',1,'DEFINE_string(output_formats, &quot;&quot;, &quot;saved formats, comma separated (exr, png, pfm supported)&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a35f43f2db1e32abfb07c947714119897',1,'DEFINE_string(output_root, &quot;&quot;, &quot;output root directory (required)&quot;):&#160;TemporalBilateralFilter.cpp'],['../_temporal_bilateral_filter_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;TemporalBilateralFilter.cpp'],['../_upsample_disparity_8cpp.html#ad482e9e10966b08463bc089fc2dc0196',1,'DEFINE_string(background_disp, &quot;&quot;, &quot;background disparity directory (output resolution)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a0976bcdd6b6eb7d819948609c83ff5fd',1,'DEFINE_string(background_frame, &quot;000000&quot;, &quot;background frame (lexical)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a4fae27d40cecc0e5a6e6ed137ef8ba0a',1,'DEFINE_string(cameras, &quot;&quot;, &quot;destination cameras&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a2269361a91aaa4e2c3ed56ad9d6b98c4',1,'DEFINE_string(color, &quot;&quot;, &quot;color directory (output resolution)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a551ef3ded7e18c80d4a3f552351e93fb',1,'DEFINE_string(disparity, &quot;&quot;, &quot;disparity directory (input resolution) (required)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#aac49a76ebf54f164552a9f4b7772b36e',1,'DEFINE_string(first, &quot;000000&quot;, &quot;first frame to process (lexical)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a02661095cb75bb034e967f27807a94ce',1,'DEFINE_string(foreground_masks_in, &quot;&quot;, &quot;(optional) masks directory (input resolution)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#aa2941e6fc6c0a5a51b3781d8fc045641',1,'DEFINE_string(foreground_masks_out, &quot;&quot;, &quot;(optional) masks directory (output resolution)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#ac929fbee9c0337309ebab423a97f9b38',1,'DEFINE_string(last, &quot;000000&quot;, &quot;last frame to process (lexical)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#ab749b6c7c2d41854879ef999c9c43ef9',1,'DEFINE_string(output, &quot;&quot;, &quot;output directory (required)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a7ab3fe766eb26b81e734977d8949fe83',1,'DEFINE_string(output_formats, &quot;&quot;, &quot;saved formats, comma separated (exr, png, pfm supported)&quot;):&#160;UpsampleDisparity.cpp'],['../_upsample_disparity_8cpp.html#a5eaed363312b7f2aed3434794f9023a2',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json&quot;):&#160;UpsampleDisparity.cpp'],['../_correct_vignetting_8cpp.html#abfc79615394c3e0779e44580a236554e',1,'DEFINE_string(out, &quot;&quot;, &quot;path to output image&quot;):&#160;CorrectVignetting.cpp'],['../_correct_vignetting_8cpp.html#abb71b7cc03f06062ee9827bb10f3c855',1,'DEFINE_string(raw, &quot;&quot;, &quot;path to raw image&quot;):&#160;CorrectVignetting.cpp'],['../_correct_vignetting_8cpp.html#af782e283c99229f0aaf4b6d81fb8bdac',1,'DEFINE_string(vignetting_x, &quot;&quot;, &quot;x-axis comma-separated vignetting values&quot;):&#160;CorrectVignetting.cpp'],['../_correct_vignetting_8cpp.html#a20a95e8316a30fb37996789dd86b14e2',1,'DEFINE_string(vignetting_y, &quot;&quot;, &quot;y-axis comma-separated vignetting values&quot;):&#160;CorrectVignetting.cpp'],['../_raw_to_rgb_8cpp.html#a7c3c7f7fd69afed268a9da15914656dc',1,'DEFINE_string(input_image_path, &quot;&quot;, &quot;input image path (required)&quot;):&#160;RawToRgb.cpp'],['../_raw_to_rgb_8cpp.html#a1f85c910ac1393361a6e48bc57977c89',1,'DEFINE_string(isp_config_path, &quot;&quot;, &quot;ISP config file path. Defaults to &lt;input_image_path&gt;/isp.json&quot;):&#160;RawToRgb.cpp'],['../_raw_to_rgb_8cpp.html#a9c6daabf9d83e37d18306f01a7851947',1,'DEFINE_string(output_dng_path, &quot;&quot;, &quot;optional path to output a DNG version of the raw file.&quot;):&#160;RawToRgb.cpp'],['../_raw_to_rgb_8cpp.html#a3e661d74054198309be707255a7cb3ba',1,'DEFINE_string(output_image_path, &quot;&quot;, &quot;output image path (required)&quot;):&#160;RawToRgb.cpp'],['../_convert_to_binary_8cpp.html#a0c503db6435bdf6b33f80ed49dec61c7',1,'DEFINE_string(bin, &quot;bin&quot;, &quot;output directory containing binary data&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#a1a20c4870c08b6954d4a3bccdc8de01a',1,'DEFINE_string(cameras, &quot;&quot;, &quot;cameras to render (comma-separated)&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#ab3136f5a8944dc0bb656253c5623e15c',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#a4d5e4b53e673a4c52bf2401460efb996',1,'DEFINE_string(disparity, &quot;&quot;, &quot;path to disparity images (pfm)&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#adf84be626163a2845b5397073e9f8aab',1,'DEFINE_string(first, &quot;&quot;, &quot;first frame to process (lexical) (required)&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#a6d33cd7524f9cd60467c28b2e7387b21',1,'DEFINE_string(foreground_masks, &quot;&quot;, &quot;path to foreground masks specifying regions to include in per-frame geometry&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#aebcccfc65e74b1be420c8cac5f7e52e0',1,'DEFINE_string(fused, &quot;&quot;, &quot;output directory containing fused binary data, ready for playback&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#a9a3898ae980f97b2781926ff6cf4ca58',1,'DEFINE_string(last, &quot;&quot;, &quot;last frame to process (lexical) (required)&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#a8acd48e8fa5fcf39031565c7dc2654a5',1,'DEFINE_string(output_formats, &quot;idx,vtx,bc7&quot;, &quot;saved formats, comma separated (idx, vtx, bc7 default; rgba, pfm, obj also supported)&quot;):&#160;ConvertToBinary.cpp'],['../_convert_to_binary_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;ConvertToBinary.cpp'],['../_compute_rephotography_errors_8cpp.html#a5e590f13b25c6975647e0ae4ac105bf2',1,'DEFINE_string(cameras, &quot;&quot;, &quot;comma-separated cameras to render (empty for all)&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_compute_rephotography_errors_8cpp.html#a1621d256f00db877a3091fe1c43e415f',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images (required)&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_compute_rephotography_errors_8cpp.html#a025797888d1591773e0c64b67afb3e2e',1,'DEFINE_string(disparity, &quot;&quot;, &quot;path to disparity images (required)&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_compute_rephotography_errors_8cpp.html#adf84be626163a2845b5397073e9f8aab',1,'DEFINE_string(first, &quot;&quot;, &quot;first frame to process (lexical) (required)&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_compute_rephotography_errors_8cpp.html#a9a3898ae980f97b2781926ff6cf4ca58',1,'DEFINE_string(last, &quot;&quot;, &quot;last frame to process (lexical) (required)&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_compute_rephotography_errors_8cpp.html#a6e4b2a69cada067caa3f3fdaf3d60fb7',1,'DEFINE_string(method, &quot;MSSIM&quot;, &quot;MSSIM or NCC&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_compute_rephotography_errors_8cpp.html#a07d7294b6ef1978f3557bbb9cb24dde2',1,'DEFINE_string(output, &quot;&quot;, &quot;path to output directory (required)&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_compute_rephotography_errors_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;ComputeRephotographyErrors.cpp'],['../_generate_camera_overlaps_8cpp.html#a1a20c4870c08b6954d4a3bccdc8de01a',1,'DEFINE_string(cameras, &quot;&quot;, &quot;cameras to render (comma-separated)&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_camera_overlaps_8cpp.html#a1621d256f00db877a3091fe1c43e415f',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images (required)&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_camera_overlaps_8cpp.html#a09ceb91a53dab1c4b656ad63fc378238',1,'DEFINE_string(frame, &quot;000000&quot;, &quot;frame to process (lexical)&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_camera_overlaps_8cpp.html#a07d7294b6ef1978f3557bbb9cb24dde2',1,'DEFINE_string(output, &quot;&quot;, &quot;path to output directory (required)&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_camera_overlaps_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_equirect_8cpp.html#a7a2ce027325756c15736633dd2b7017e',1,'DEFINE_string(camera_id, &quot;&quot;, &quot;id of camera selected to be centered&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#a1a20c4870c08b6954d4a3bccdc8de01a',1,'DEFINE_string(cameras, &quot;&quot;, &quot;cameras to render (comma-separated)&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#a1621d256f00db877a3091fe1c43e415f',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images (required)&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#a09ceb91a53dab1c4b656ad63fc378238',1,'DEFINE_string(frame, &quot;000000&quot;, &quot;frame to process (lexical)&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#a07d7294b6ef1978f3557bbb9cb24dde2',1,'DEFINE_string(output, &quot;&quot;, &quot;path to output directory (required)&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;GenerateEquirect.cpp'],['../_generate_foreground_masks_8cpp.html#a1902581a7b5bd8a7b07abdbd9b6ce658',1,'DEFINE_string(background_color, &quot;&quot;, &quot;path to input background color images (required)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#a0976bcdd6b6eb7d819948609c83ff5fd',1,'DEFINE_string(background_frame, &quot;000000&quot;, &quot;background frame (lexical)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#a5e590f13b25c6975647e0ae4ac105bf2',1,'DEFINE_string(cameras, &quot;&quot;, &quot;comma-separated cameras to render (empty for all)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#a1621d256f00db877a3091fe1c43e415f',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images (required)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#adf84be626163a2845b5397073e9f8aab',1,'DEFINE_string(first, &quot;&quot;, &quot;first frame to process (lexical) (required)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#ab97528fb17725d368655906088975bfc',1,'DEFINE_string(foreground_masks, &quot;&quot;, &quot;path to output foreground masks (required)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#a9a3898ae980f97b2781926ff6cf4ca58',1,'DEFINE_string(last, &quot;&quot;, &quot;last frame to process (lexical) (required)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_foreground_masks_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;GenerateForegroundMasks.cpp'],['../_generate_keypoint_projections_8cpp.html#ad6208abf406e413f02efd2b48db3026c',1,'DEFINE_string(output_dir, &quot;&quot;, &quot;path to output directory&quot;):&#160;GenerateKeypointProjections.cpp'],['../_generate_keypoint_projections_8cpp.html#aba27f1018c44b2f2412271f3417f798d',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json file&quot;):&#160;GenerateKeypointProjections.cpp'],['../_geometric_consistency_8cpp.html#a30a7c2516044e57632725533ad50e679',1,'DEFINE_string(color, &quot;&quot;, &quot;color directory (required)&quot;):&#160;GeometricConsistency.cpp'],['../_geometric_consistency_8cpp.html#af0e26ae6b79f835955b587dbb30a8035',1,'DEFINE_string(first, &quot;&quot;, &quot;first frame to process (lexical)&quot;):&#160;GeometricConsistency.cpp'],['../_geometric_consistency_8cpp.html#a0c580ee62ee4fb1f94d3ee4486b89393',1,'DEFINE_string(last, &quot;&quot;, &quot;last frame to process (lexical)&quot;):&#160;GeometricConsistency.cpp'],['../_geometric_consistency_8cpp.html#aa6a266bfa65a51fba2aa11cae7e86bf8',1,'DEFINE_string(output, &quot;&quot;, &quot;output subdirectory (required)&quot;):&#160;GeometricConsistency.cpp'],['../_geometric_consistency_8cpp.html#a79085263e4a90eca4311b8564c39a490',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to rig .json file (required)&quot;):&#160;GeometricConsistency.cpp'],['../_geometric_consistency_8cpp.html#a6aa18f1b8fcdb98d09a61f794912b539',1,'DEFINE_string(single, &quot;&quot;, &quot;render a single destination camera&quot;):&#160;GeometricConsistency.cpp'],['../_simple_mesh_renderer_8cpp.html#a5e590f13b25c6975647e0ae4ac105bf2',1,'DEFINE_string(cameras, &quot;&quot;, &quot;comma-separated cameras to render (empty for all)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a1621d256f00db877a3091fe1c43e415f',1,'DEFINE_string(color, &quot;&quot;, &quot;path to input color images (required)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a025797888d1591773e0c64b67afb3e2e',1,'DEFINE_string(disparity, &quot;&quot;, &quot;path to disparity images (required)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#afc85bb1ce1d5c75c28a40c5620bd8202',1,'DEFINE_string(background, &quot;&quot;, &quot;path to optional background image&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a069ec79f05dcef52a82808b820fb91e8',1,'DEFINE_string(background_equirect, &quot;&quot;, &quot;path to optional background equirect image&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a25d37c2ac18a794e3fbc6f378e7adb4e',1,'DEFINE_string(file_type, &quot;png&quot;, &quot;Supports any image type allowed in OpenCV&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#aac49a76ebf54f164552a9f4b7772b36e',1,'DEFINE_string(first, &quot;000000&quot;, &quot;first frame to process (lexical)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a6f0aa1bebc8d0a73e43ff0ad9651f0af',1,'DEFINE_string(forward, &quot;-1.0 0.0 0.0&quot;, &quot;forward for rendering&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a38d1570bc9ebbf10efd0bb1860b4e225',1,'DEFINE_string(last, &quot;000000&quot;, &quot;last frame to process (lexical) (ignored if on-screen rendering)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#ad9990d3fa32c78660b29665085490957',1,'DEFINE_string(output, &quot;&quot;, &quot;path to output directory&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#abe7e1c969156c6424c472f469d886533',1,'DEFINE_string(position, &quot;0.0 0.0 0.0&quot;, &quot;position to render from (m)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a5bb895a762b422a925c4cdda0d72b2e8',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to camera rig .json (required)&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#ab0fe689dffda838cd2ea9ed87b762188',1,'DEFINE_string(up, &quot;0.0 0.0 1.0&quot;, &quot;up for rendering&quot;):&#160;SimpleMeshRenderer.cpp'],['../_simple_mesh_renderer_8cpp.html#a64803a1332a975794b8514ffa933a13e',1,'DEFINE_string(format, &quot;&quot;, formatsCsv.c_str()):&#160;SimpleMeshRenderer.cpp'],['../_view_color_variance_thresholds_8cpp.html#a5b6a85045539f44a6eed9e34df199199',1,'DEFINE_string(fullsize_image, &quot;&quot;, &quot;path to full-size RGB image (required)&quot;):&#160;ViewColorVarianceThresholds.cpp'],['../_view_foreground_mask_thresholds_8cpp.html#a2f338ee138b7258fae29a266dba0af51',1,'DEFINE_string(fullsize_bg_image, &quot;&quot;, &quot;path to full-size RGB background image (required)&quot;):&#160;ViewForegroundMaskThresholds.cpp'],['../_view_foreground_mask_thresholds_8cpp.html#a484184a2b7c740c282b8524e56e902e7',1,'DEFINE_string(fullsize_fg_image, &quot;&quot;, &quot;path to full-size RGB foreground image (required)&quot;):&#160;ViewForegroundMaskThresholds.cpp'],['../_align_point_cloud_8cpp.html#add55fdfac38d5fc2354264793315cf28',1,'DEFINE_string(cameras, &quot;&quot;, &quot;subset of cameras to use for aligment (comma-separated)&quot;):&#160;AlignPointCloud.cpp'],['../_align_point_cloud_8cpp.html#a3bb257900a5f4a1aa322bb9a937b677d',1,'DEFINE_string(debug_dir, &quot;&quot;, &quot;path to debug output&quot;):&#160;AlignPointCloud.cpp'],['../_align_point_cloud_8cpp.html#a816d6aa95f5ba7cb2847dcbe9f1ed888',1,'DEFINE_string(point_cloud, &quot;&quot;, &quot;path to the point cloud file (required)&quot;):&#160;AlignPointCloud.cpp'],['../_rig_aligner_8cpp.html#a7c8a0eab8b221a6cc33db7ffc724b885',1,'DEFINE_string(rig_in, &quot;&quot;, &quot;path to rig .json file (required)&quot;):&#160;RigAligner.cpp'],['../_rig_aligner_8cpp.html#a5aeee4ff48be6f8fbd1cb0e01a424a19',1,'DEFINE_string(rig_out, &quot;&quot;, &quot;path to output rig .json file (required)&quot;):&#160;RigAligner.cpp'],['../_rig_aligner_8cpp.html#a4d907fe8abe783a963335303a24917ad',1,'DEFINE_string(rig_reference, &quot;&quot;, &quot;path to the reference rig .json file (required)&quot;):&#160;RigAligner.cpp'],['../_rig_aligner_8cpp.html#a4454fc51120e29c4ca19a12a57d55982',1,'DEFINE_string(transformed_rig, &quot;&quot;, &quot;path to transformed test rig .json file&quot;):&#160;RigAligner.cpp'],['../_rig_analyzer_8cpp.html#adee5c7e79ca6e3081846d3ff55829c35',1,'DEFINE_string(eulers, &quot;&quot;, &quot;create from eulers file&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a24fa72be14431d897c23c415ecda1ee5',1,'DEFINE_string(output_camera, &quot;&quot;, &quot;path to output camera .ppm file&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a9975917a1947210031077fd5e12be0dd',1,'DEFINE_string(output_camera_id, &quot;&quot;, &quot;output camera id&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a68e27fc8f855054ae8651263278b15c7',1,'DEFINE_string(output_cross_section, &quot;&quot;, &quot;path to output cross section .ppm file&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#abbf1232c08f10c359c26b7174d3edda3',1,'DEFINE_string(output_equirect, &quot;&quot;, &quot;path to output equirect .ppm file&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a25c8e2cf4a597778b88bb673a05f5415',1,'DEFINE_string(output_obj, &quot;&quot;, &quot;path to output rig .obj file&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#ad4c6039a9d834af5b40f42c5e0cab7e1',1,'DEFINE_string(output_rig, &quot;&quot;, &quot;path to output rig .json file&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a918ba06d2cd59ba7bbae2cf5416b29bd',1,'DEFINE_string(rearrange, &quot;&quot;, &quot;create specific arrangement (ballcam24, tetra, ring4, cube, carbon0, carbon1, diamond)&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a92c3464359925014af2ea35533b50158',1,'DEFINE_string(revolve, &quot;&quot;, &quot;create from angle file&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a79085263e4a90eca4311b8564c39a490',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to rig .json file (required)&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#a56238509371c1c1659e59cbb977745df',1,'DEFINE_string(rotate, &quot;&quot;, &quot;rotate rig by euler angles&quot;):&#160;RigAnalyzer.cpp'],['../_rig_analyzer_8cpp.html#aeb3bb12e53a31336df0d9b7962409ef8',1,'DEFINE_string(rotate_cam_z, &quot;&quot;, &quot;rotate camera to align with z&quot;):&#160;RigAnalyzer.cpp'],['../_rig_compare_8cpp.html#a897b571571bd32cf18b9a22e852ce2f3',1,'DEFINE_string(reference, &quot;&quot;, &quot;path to reference rig .json file (required)&quot;):&#160;RigCompare.cpp'],['../_rig_compare_8cpp.html#a79085263e4a90eca4311b8564c39a490',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to rig .json file (required)&quot;):&#160;RigCompare.cpp'],['../_rig_simulator_8cpp.html#ad2286366924ce3aa7dec6a01864a9302',1,'DEFINE_string(ceiling_path, &quot;&quot;, &quot;path to image to use for ceiling&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a707d48b5f677b8fcb99a5495fdcd6715',1,'DEFINE_string(dest_cam_images, &quot;&quot;, &quot;path to directory to write camera images for multi-camera rigs&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#aa932367857ff58ca678f3c5573d0d2a2',1,'DEFINE_string(dest_left, &quot;&quot;, &quot;path to left-eye image&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a83f0588f481ab7db85de53b647e352df',1,'DEFINE_string(dest_mono, &quot;&quot;, &quot;path to mono image&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a0e57ae082688dfaf05c0851b3cc9a30a',1,'DEFINE_string(dest_mono_depth, &quot;&quot;, &quot;path to mono 1/depthmap (intensity = 1 / depth in meters)&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ab4c10c63079f34e9ca73c7adc7069261',1,'DEFINE_string(dest_right, &quot;&quot;, &quot;path to right-eye image&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ac5eeb3b60ebb56195a55ac7540d7dbbd',1,'DEFINE_string(dest_stereo, &quot;&quot;, &quot;path to right-eye image&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ac0935280b3544b10140acf2eed776332',1,'DEFINE_string(mode, &quot;&quot;, &quot;mono_eqr,stereo_eqr,pinhole_ring,ftheta_ring,dodecahedron,icosahedron,rig_from_json (required)&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ae951daa04d4d3e3a1e082287420d5781',1,'DEFINE_string(rig_in, &quot;&quot;, &quot;path to read json rig file if mode = rig_from_json&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a69310ec3ea17bb0fc6ce7b4ce818db8b',1,'DEFINE_string(rig_out, &quot;&quot;, &quot;path to write json description of multi-camera rig&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#ab266f6107f61b0762846e408fb9cbdc8',1,'DEFINE_string(scene, &quot;icosahedron&quot;, &quot;scene to draw: &apos;icosahedron&apos;, &apos;cube&apos;, &apos;ground_plane&apos;&quot;):&#160;RigSimulator.cpp'],['../_rig_simulator_8cpp.html#a1a419089d5945a299a86486d6e0c719f',1,'DEFINE_string(skybox_path, &quot;res/skybox.jpg&quot;, &quot;path to image to use as background/skybox&quot;):&#160;RigSimulator.cpp'],['../_gl_viewer_8cpp.html#a7d0ef9876830c7d304f7ef3a85f6926f',1,'DEFINE_string(catalog, &quot;&quot;, &quot;json file describing strip files&quot;):&#160;GlViewer.cpp'],['../_gl_viewer_8cpp.html#a800e03d7c341035a6d1c4a9b8e27343e',1,'DEFINE_string(strip_files, &quot;&quot;, &quot;comma-separated list of strip files&quot;):&#160;GlViewer.cpp'],['../_gl_viewer_8cpp.html#a79085263e4a90eca4311b8564c39a490',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to rig .json file (required)&quot;):&#160;GlViewer.cpp'],['../_rift_viewer_8cpp.html#ade43c6ace6c7edc7d9fd84a9ff647071',1,'DEFINE_string(audio, &quot;&quot;, &quot;optional .tbe audio file&quot;):&#160;RiftViewer.cpp'],['../_rift_viewer_8cpp.html#a82db5e391e2cf4a516bf2457e3d4d75c',1,'DEFINE_string(background_catalog, &quot;&quot;, &quot;optional path to catalog for background (experimental)&quot;):&#160;RiftViewer.cpp'],['../_rift_viewer_8cpp.html#ad957a5aa855571e2e80f8efcf21739fb',1,'DEFINE_string(background_file, &quot;&quot;, &quot;optional single strip file for background (experimental)&quot;):&#160;RiftViewer.cpp'],['../_rift_viewer_8cpp.html#a1e23f41dc55a11559f7272629e05f099',1,'DEFINE_string(catalog, &quot;&quot;, &quot;path to catalog file (required)&quot;):&#160;RiftViewer.cpp'],['../_rift_viewer_8cpp.html#a61b4804dcc98f41ed5489ba4e953934b',1,'DEFINE_string(rig, &quot;&quot;, &quot;path to rig.json (required)&quot;):&#160;RiftViewer.cpp'],['../_rift_viewer_8cpp.html#ab8c40ef3e5e128299d0da7fe01b7e88c',1,'DEFINE_string(strip_files, &quot;&quot;, &quot;comma-separated list of strip files (required)&quot;):&#160;RiftViewer.cpp']]],
  ['define_5fuint32',['DEFINE_uint32',['../_raw_to_rgb_8cpp.html#aeb92e851894e0b9fcb7398b3db2be82e',1,'RawToRgb.cpp']]],
  ['define_5fuint64',['DEFINE_uint64',['../_generate_camera_overlaps_8cpp.html#a5f6dfef320fdf59beb9c8edaa24b23a1',1,'DEFINE_uint64(max_depth_m, 10, &quot;max depth in cm&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_camera_overlaps_8cpp.html#a08cec99f7d0c3873f0f6c3a7fd83fb33',1,'DEFINE_uint64(min_depth_m, 1, &quot;min depth in cm&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_camera_overlaps_8cpp.html#a82d9b94e020e6f34d1124b9ab04e7671',1,'DEFINE_uint64(num_depths, 50, &quot;num depths&quot;):&#160;GenerateCameraOverlaps.cpp'],['../_generate_equirect_8cpp.html#a8a89ebd40c6d34801a4dd1a3a5e544ee',1,'DEFINE_uint64(height, 512, &quot;equirect height in pixels&quot;):&#160;GenerateEquirect.cpp'],['../_generate_equirect_8cpp.html#a82d9b94e020e6f34d1124b9ab04e7671',1,'DEFINE_uint64(num_depths, 50, &quot;num depths&quot;):&#160;GenerateEquirect.cpp']]],
  ['destroy',['destroy',['../structfb360__dep_1_1_canopy.html#a1a04deaa313420e4c5a5e5709d8a2cbc',1,'fb360_dep::Canopy']]],
  ['destroyframe',['destroyFrame',['../structfb360__dep_1_1_rig_scene.html#a13c5d0d18b2519fd2a45bb13e71fb515',1,'fb360_dep::RigScene']]],
  ['destroyframebuffers',['destroyFramebuffers',['../structfb360__dep_1_1_rig_scene.html#ad1b2f0c5b77bd912ec893e89b51852fe',1,'fb360_dep::RigScene']]],
  ['destroyprograms',['destroyPrograms',['../structfb360__dep_1_1_rig_scene.html#af6889b199657b5b0fb9df721de7853d5',1,'fb360_dep::RigScene']]],
  ['dilate',['dilate',['../namespacefb360__dep_1_1cv__util.html#a0268b16fb286e4e107ab5d2d0204377f',1,'fb360_dep::cv_util']]],
  ['discardpoles',['discardPoles',['../_rig_analyzer_8cpp.html#adb2771ddd61690fe462a2973e759a29b',1,'RigAnalyzer.cpp']]],
  ['disparitycolor',['disparityColor',['../namespacefb360__dep.html#ac506835fcd50a72ec3e03ee018b767da',1,'fb360_dep']]],
  ['disparitycolors',['disparityColors',['../namespacefb360__dep.html#a91a48a296f49b51265c6707fc6f7ffb4',1,'fb360_dep']]],
  ['display',['display',['../class_gl_offscreen_window.html#a11ed405705f676c80b5545a689e038ad',1,'GlOffscreenWindow::display()'],['../class_gl_window.html#a8fa687188b6211ddbea1943c78219c6e',1,'GlWindow::display()'],['../class_offscreen_window.html#aa924f2a2f59b699ae3837d51855cc4e2',1,'OffscreenWindow::display() override'],['../class_offscreen_window.html#aa924f2a2f59b699ae3837d51855cc4e2',1,'OffscreenWindow::display() override'],['../class_simple_mesh_window.html#ab713c8d84a7cff5657efcca499b99ab8',1,'SimpleMeshWindow::display()'],['../class_gl_viewer.html#abe5b4f6441480b4f851f89e70c23072c',1,'GlViewer::display()']]],
  ['distort',['distort',['../structfb360__dep_1_1_camera.html#a3f08a767d427405adf6861768b84c77a',1,'fb360_dep::Camera']]],
  ['downscale',['downscale',['../_geometric_consistency_8cpp.html#a4c1c5b3dab8384cae05295e9c255db60',1,'downscale(const Camera::Rig &amp;rig):&#160;GeometricConsistency.cpp'],['../_rig_simulator_8cpp.html#a55cf7442810f350bc0b48aefc32e73d8',1,'downscale(const cv::Mat_&lt; T &gt; &amp;src, int factor):&#160;RigSimulator.cpp']]],
  ['drawelements',['drawElements',['../_gl_util_8h.html#a5c15a694a265ccb6ea540d1325f79a90',1,'drawElements(GLenum mode, uint32_t count):&#160;GlUtil.h'],['../_gl_util_8h.html#a46bdbd773c933924566ebfca5174d84d',1,'drawElements(GLenum mode):&#160;GlUtil.h'],['../_gl_util_8h.html#adcd9e5aeef653de188c18b8ac04f82d3',1,'drawElements(GLenum mode, const T &amp;v):&#160;GlUtil.h']]],
  ['drawredgreenline',['drawRedGreenLine',['../_geometric_calibration_8cpp.html#ad9938b25f2a3a991d0dc73f6795ccf0c',1,'GeometricCalibration.cpp']]],
  ['dstbackgrounddisparity',['dstBackgroundDisparity',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#abd42fc83f6d3c4da0dfc03539847ffc3',1,'fb360_dep::depth_estimation::PyramidLevel::dstBackgroundDisparity(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a945e4f5da2f591d0bc4a48bac4cd77ee',1,'fb360_dep::depth_estimation::PyramidLevel::dstBackgroundDisparity(const int dstId) const']]],
  ['dstcolor',['dstColor',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a4083a3610186bae20a4a5ea353078adf',1,'fb360_dep::depth_estimation::PyramidLevel::dstColor(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a8291d52b7fe36ef99a9fe1b97aca0ffd',1,'fb360_dep::depth_estimation::PyramidLevel::dstColor(const int dstId) const']]],
  ['dstconfidence',['dstConfidence',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#ab560ddb7359c7c598b13685f384e3e2b',1,'fb360_dep::depth_estimation::PyramidLevel::dstConfidence(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#ad7671f140c9917c871f627cd2649f095',1,'fb360_dep::depth_estimation::PyramidLevel::dstConfidence(const int dstId) const']]],
  ['dstcost',['dstCost',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a1e3ddff3c5ae00db4156aba6a675188a',1,'fb360_dep::depth_estimation::PyramidLevel::dstCost(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a19a474e4f8cd9b16fe44527c3750adcf',1,'fb360_dep::depth_estimation::PyramidLevel::dstCost(const int dstId) const']]],
  ['dstdisparity',['dstDisparity',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a1a69ac5b6daa7ee9ec11d0e3a3b51605',1,'fb360_dep::depth_estimation::PyramidLevel::dstDisparity(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#aa5368b67ff4e2e624e0b2335e49c2c6d',1,'fb360_dep::depth_estimation::PyramidLevel::dstDisparity(const int dstId) const']]],
  ['dstforegroundmask',['dstForegroundMask',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a59153c411342e29e593df6336cccf961',1,'fb360_dep::depth_estimation::PyramidLevel::dstForegroundMask(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a4c60808898d03f6447a1707592d49da4',1,'fb360_dep::depth_estimation::PyramidLevel::dstForegroundMask(const int dstId) const']]],
  ['dstfovmask',['dstFovMask',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#aa02b8def3058bd176629f844898b993c',1,'fb360_dep::depth_estimation::PyramidLevel::dstFovMask(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a69528723454cdffd6a8b93bad9ada096',1,'fb360_dep::depth_estimation::PyramidLevel::dstFovMask(const int dstId) const']]],
  ['dstmismatcheddisparitymask',['dstMismatchedDisparityMask',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a144cccbc250fe8c0d020004e2df51a4b',1,'fb360_dep::depth_estimation::PyramidLevel::dstMismatchedDisparityMask(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a11012755b7e52a26c2949798030905cc',1,'fb360_dep::depth_estimation::PyramidLevel::dstMismatchedDisparityMask(const int dstId) const']]],
  ['dstoverlap',['dstOverlap',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#ac853c6e54940f362994dfb5507c3ead1',1,'fb360_dep::depth_estimation::PyramidLevel::dstOverlap(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#ab35431f97a0540146088846f7a605254',1,'fb360_dep::depth_estimation::PyramidLevel::dstOverlap(const int dstId) const']]],
  ['dstprojcolor',['dstProjColor',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#ad30bd0d07d676954e648d6fd20b28507',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjColor(const int dstId, const int srcId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a97364357b6f7e16179736636f7c111c1',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjColor(const int dstId, const int srcId) const'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a755996dae97589249ecf6791314f8a63',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjColor(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a5f23a787bb086c20da12d8a81597de73',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjColor(const int dstId) const']]],
  ['dstprojcolorbias',['dstProjColorBias',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a3092a3b67c0b152ef5a57eeef2f23b3a',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjColorBias(const int dstId, const int srcId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#aa94f042b88adeaae5539717a4208c573',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjColorBias(const int dstId, const int srcId) const'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a88ee8b3c77513c3036add8a48e6f60d2',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjColorBias(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a17f56c8ff037e4ea28125557b716146a',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjColorBias(const int dstId) const']]],
  ['dstprojwarp',['dstProjWarp',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a5cef30643bfe59b2614282eeeaa00cd2',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjWarp(const int dstId, const int srcId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a3119f46e8179de7c9970bce770018e69',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjWarp(const int dstId, const int srcId) const']]],
  ['dstprojwarpinv',['dstProjWarpInv',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a922c1c48914855408f5f8edb9737c6c3',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjWarpInv(const int dstId, const int srcId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#aa3fa4ff0a3f785465310c02002b5f1e4',1,'fb360_dep::depth_estimation::PyramidLevel::dstProjWarpInv(const int dstId, const int srcId) const']]],
  ['dsttoworldpoint',['dstToWorldPoint',['../namespacefb360__dep_1_1depth__estimation.html#a42d305e2749dd2354c07cc0f614d724e',1,'fb360_dep::depth_estimation']]],
  ['dstvariance',['dstVariance',['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#aefbf442207b8855f1574923b74ae44b0',1,'fb360_dep::depth_estimation::PyramidLevel::dstVariance(const int dstId)'],['../structfb360__dep_1_1depth__estimation_1_1_pyramid_level.html#a989011caaaac758d13cc4391f31e0fb0',1,'fb360_dep::depth_estimation::PyramidLevel::dstVariance(const int dstId) const']]],
  ['dump',['dump',['../structfb360__dep_1_1_async_file_1_1_activity_log.html#a310075cf5dac682b376e2be8636d7af7',1,'fb360_dep::AsyncFile::ActivityLog::dump()'],['../_geometric_consistency_8cpp.html#a594b7b961cd4bfa544f5cc602d061f00',1,'dump():&#160;GeometricConsistency.cpp']]],
  ['dumpoverlaps',['dumpOverlaps',['../_generate_camera_overlaps_8cpp.html#abdd18cc7343b3248c9e5e46df8369a1b',1,'GenerateCameraOverlaps.cpp']]]
];
